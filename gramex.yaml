# Generated by gramex init 1.57.0 (don't delete this line)

# App Configurations
app:
  listen:
    port: 8010
  settings:
    debug: False
  browser: '/'

# Configurations for app: modelhandler-demo
# ----------------------------------------------------------------------------
url:
  modelhandler-demo-home:
    pattern: /$YAMLURL/
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/index.html
      auth: true
      # See https://learn.gramener.com/guide/auth/#authorization for auth rules
      template: true

  # FunctionHandler using yaml
  scipy-app-hello:                            # A unique name for this mapping
    pattern: /$YAMLURL/hello                  # Map the URL /hello
    handler: FunctionHandler                  # using the build-in FunctionHandler
    kwargs:                                   # Pass these options to FunctionHandler
      function: str(' Hello')                 # Run the str() function with the argument "Hello"

  # FunctionHandler with python file
  scipy-app-total:
    pattern: /$YAMLURL/total                             # The "total" URL
    handler: FunctionHandler                             # runs a function
    kwargs:
      function: modelhandler_demo.total(100, 200)        # total() from mentioned py file
      headers:
        Content-Type: text/plain                         # Display as JSON

  # URL Patern and Regex
  scipy-app-lookup:
    pattern: /$YAMLURL/name/([a-z]+)/age/([0-9]+)   # e.g. /name/john/age/21
    handler: FunctionHandler                        # Runs a function
    kwargs:
        function: modelhandler_demo.name_age        # Run this function

  scipy-app-uploadhandler:
    pattern: /$YAMLURL/upload
    handler: UploadHandler
    kwargs:
      if_exists: overwrite            # Overwrite the original without backup
      # if_exists: error              # Raises a HTTP 403 with a reason saying "file exists"
      # if_exists: backup             # Move the original to filename.YYYYMMDD-HHMMSS.ext
      # if_exists: unique             # Save to a new file: filename.1, filename.2, etc
      path: $YAMLPATH/upload_data
      methods: get                    # Upload listing
      redirect: /$YAMLURL/            # redirect to url

  # formHandler snippet
  scipy-app-formhandler:
    pattern: /$YAMLURL/data
    handler: FormHandler
    kwargs:
      url: $YAMLPATH/upload_data/data.csv

  scipy-app-modelhandler:
    pattern: /$YAMLURL/train_method
    handler: FunctionHandler
    kwargs:
      function: modelhandler_demo.train_method
      xsrf_cookies: false
      headers:
        Content-Type: text/plain
        Cache-Control: no-store

  scipy-app-chart:
    pattern: /$YAMLURL/chart.png
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/chart.png
      headers:
        Cache-Control: no-store

  gramex-scipy-workshop-login:
    # Default login_url is /login/. If you change this, change auth.login_url
    # https://learn.gramener.com/guide/auth/#login-urls
    pattern: /$YAMLURL/login/
    # You MUST change the auth before deploying. DBAuth is commonly used.
    # See https://learn.gramener.com/guide/auth/#database-auth
    handler: SimpleAuth
    kwargs:
      template: $YAMLPATH/login.html
      credentials:
        alpha: alpha
        beta: beta

  gramex-scipy-workshop-logout:
    pattern: /$YAMLURL/logout/
    handler: LogoutHandler
    kwargs:
      redirect: /$YAMLURL/login/

email:
  gramex-guide-gmail:
    type: gmail                       # Type of email used is GMail
    email: gramex.guide@gmail.com     # Generic email ID used to test e-mails
    password: tlpmupxnhucitpte        # App-specific password created for Gramex guide

alert:
  alert-schedule:
    # days: '*'                       # Send email every day
    # hours: '*'                      # at particular hour
    # minutes: '*'                    # at particular min
    startup: false
    # condition: once("Hello World!")
    to:
      - nivedita.deshmukh@gramener.com
      # - kamlesh.jaiswal@gramener.com
      # cc: kamlesh.jaiswal@gramener.com
    subject: Scheduled alert
    body: This email will be scheduled and sent as long as Gramex is running.
    html: <p>This content will be shown in <em>HTML</em> on <strong>supported devices</strong>.
    # markdown: |
    #   <p>This email has inline images.</p>
    #   <img src="cid:img1">
    # markdownfile: $YAMLPATH/content.md
    # images:
    #   img1: $YAMLPATH/required_sequence.png
    # attachments:
    #   - map_data.xlsx


# Gramex init configurations for application
# ----------------------------------------------------------------------------
import:
  ui:
    path: $GRAMEXAPPS/ui/gramex.yaml
    YAMLURL: $YAMLURL/ui/

handlers:
  BaseHandler:
    # Custom error pages for this application
    error:
      400: {path: $YAMLPATH/error/400.html}     # Bad request: e.g. URL argument missing
      401: {path: $YAMLPATH/error/401.html}     # Unauthorized: User not logged in
      403: {path: $YAMLPATH/error/403.html}     # Forbidden: user does not have access
      404: {path: $YAMLPATH/error/404.html}     # File not found
      500: {path: $YAMLPATH/error/500.html}     # Internal server error
